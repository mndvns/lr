#!/usr/bin/env node

/**
 * Module dependencies.
 */

var program = require('commander');
var TTY = require('tty');

/**
 * Configure and expose `program`.
 */

module.exports = program
  .version(require('../package.json').version)
  .usage('[options] [path]:[command] ...')
  .option('-p, --port <port>', 'listen on port', 35729)
  .option('-m, --mute <char>', 'character to suppress reloading', '@')
  .option('-C, --ignore-config', 'ignore all config files')
  .option('-c, --config <path>', 'path to configuration file', '.lr.yml')
  .option('-i, --ignore <pattern>,...', 'regular expressions(s) of files to ignore', list, [])
  .option('-v, --verbose', 'more detailed log messages')
  .option('-s, --silent', 'suppress all log messages', tty)
  .option('-o, --stdout', 'write log messages to process stdout', false)
  .option('-I, --indent', 'don\'t print indentation lines', tty(false))

program.parse(process.argv);

var LR = require('..');

// initialize `Livereload`
var lr = new LR();

if (program.silent) lr.silent();

program.args.forEach(function run(arg) {
  var parts = arg.split(':');
  var path = parts[0];
  var command = parts[1];

  lr.watch(path, command);
});

lr.listen(program.port, function() {
  console.log('livereload listening on port', program.port);
});

/**
 * Parse list.
 */

function list(str) {
  return str.split(/ *, */);
}

function tty(status) {
  // TODO finish this
  /* process.stdout.write('\n@@@@' + TTY.isatty() + '\n'); */
}
